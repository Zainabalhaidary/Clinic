<!--
    This file contains XAML styles that simplify application development.

    These are not merely convenient, but are required by most Visual Studio project and item templates.
    Removing, renaming, or otherwise modifying the content of these files may result in a project that
    does not build, or that will not build once additional pages are added.  If variations on these
    styles are desired it is recommended that you copy the content under a new name and modify your
    private copy.
-->

<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:clinic="using:Clinic"
    xmlns:common="using:Clinic.Common" 
    xmlns:charting="using:WinRTXamlToolkit.Controls.DataVisualization.Charting"
    xmlns:dt2="using:WinRTXamlToolkit.Controls" 
    xmlns:dt="using:WinRTDatePicker">
    <!-- Non-brush values that vary across themes -->
    
    <ResourceDictionary.ThemeDictionaries>
        <ResourceDictionary x:Key="Default">
            <x:String x:Key="BackButtonGlyph">&#xE071;</x:String>
            <x:String x:Key="BackButtonSnappedGlyph">&#xE0BA;</x:String>
        </ResourceDictionary>

        <ResourceDictionary x:Key="HighContrast">
            <x:String x:Key="BackButtonGlyph">&#xE0A6;</x:String>
            <x:String x:Key="BackButtonSnappedGlyph">&#xE0C4;</x:String>
        </ResourceDictionary>
    </ResourceDictionary.ThemeDictionaries>

    <!-- RichTextBlock styles -->
    <SolidColorBrush x:Key="ListViewItemSelectedPointerOverBackgroundThemeBrushOverlay" Color="#20000000"></SolidColorBrush>
    <SolidColorBrush x:Key="ListViewItemSelectedBackgroundThemeBrushOverlay" Color="#00000000"></SolidColorBrush>

    <Style x:Key="BasicRichTextStyle" TargetType="RichTextBlock">
        <Setter Property="Foreground" Value="{StaticResource ApplicationForegroundThemeBrush}"/>
        <Setter Property="FontSize" Value="{StaticResource ControlContentThemeFontSize}"/>
        <Setter Property="FontFamily" Value="{StaticResource ContentControlThemeFontFamily}"/>
        <Setter Property="TextTrimming" Value="WordEllipsis"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="Typography.StylisticSet20" Value="True"/>
        <Setter Property="Typography.DiscretionaryLigatures" Value="True"/>
        <Setter Property="Typography.CaseSensitiveForms" Value="True"/>
    </Style>

    <Style x:Key="BaselineRichTextStyle" TargetType="RichTextBlock" BasedOn="{StaticResource BasicRichTextStyle}">
        <Setter Property="LineHeight" Value="20"/>
        <Setter Property="LineStackingStrategy" Value="BlockLineHeight"/>
        <!-- Properly align text along its baseline -->
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TranslateTransform X="-1" Y="4"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ItemRichTextStyle" TargetType="RichTextBlock" BasedOn="{StaticResource BaselineRichTextStyle}"/>

    <Style x:Key="BodyRichTextStyle" TargetType="RichTextBlock" BasedOn="{StaticResource BaselineRichTextStyle}">
        <Setter Property="FontWeight" Value="SemiLight"/>
    </Style>

    <!-- TextBlock styles -->

    <Style x:Key="BasicTextStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource ApplicationForegroundThemeBrush}"/>
        <Setter Property="FontSize" Value="{StaticResource ControlContentThemeFontSize}"/>
        <Setter Property="FontFamily" Value="{StaticResource ContentControlThemeFontFamily}"/>
        <Setter Property="TextTrimming" Value="WordEllipsis"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="Typography.StylisticSet20" Value="True"/>
        <Setter Property="Typography.DiscretionaryLigatures" Value="True"/>
        <Setter Property="Typography.CaseSensitiveForms" Value="True"/>
    </Style>

    <Style x:Key="BaselineTextStyle" TargetType="TextBlock" BasedOn="{StaticResource BasicTextStyle}">
        <Setter Property="LineHeight" Value="20"/>
        <Setter Property="LineStackingStrategy" Value="BlockLineHeight"/>
        <!-- Properly align text along its baseline -->
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TranslateTransform X="-1" Y="4"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HeaderTextStyle" TargetType="TextBlock" BasedOn="{StaticResource BaselineTextStyle}">
        <Setter Property="FontSize" Value="42"/>
        <Setter Property="FontWeight" Value="Light"/>
        <Setter Property="LineHeight" Value="40"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TranslateTransform X="-2" Y="8"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SubheaderTextStyle" TargetType="TextBlock" BasedOn="{StaticResource BaselineTextStyle}">
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="LineHeight" Value="30"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TranslateTransform X="-1" Y="6"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TitleTextStyle" TargetType="TextBlock" BasedOn="{StaticResource BaselineTextStyle}">
        <Setter Property="FontWeight" Value="SemiBold"/>
    </Style>

    <Style x:Key="ItemTextStyle" TargetType="TextBlock" BasedOn="{StaticResource BaselineTextStyle}"/>

    <Style x:Key="BodyTextStyle" TargetType="TextBlock" BasedOn="{StaticResource BaselineTextStyle}">
        <Setter Property="FontWeight" Value="SemiLight"/>
    </Style>

    <Style x:Key="CaptionTextStyle" TargetType="TextBlock" BasedOn="{StaticResource BaselineTextStyle}">
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Foreground" Value="{StaticResource ApplicationSecondaryForegroundThemeBrush}"/>
    </Style>

    <!-- Button styles -->

    <!--
        TextButtonStyle is used to style a Button using subheader-styled text with no other adornment.  This
        style is used in the GroupedItemsPage as a group header and in the FileOpenPickerPage for triggering
        commands.
    -->
    <Style x:Key="TextButtonStyle" TargetType="Button">
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="MinHeight" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Background="Transparent">
                        <TextBlock
                            x:Name="Text"
                            Text="{TemplateBinding Content}"
                            Margin="3,-7,3,10"
                            TextWrapping="NoWrap"
                            Style="{StaticResource SubheaderTextStyle}"/>
                        <Rectangle
                            x:Name="FocusVisualWhite"
                            IsHitTestVisible="False"
                            Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}"
                            StrokeEndLineCap="Square"
                            StrokeDashArray="1,1"
                            Opacity="0"
                            StrokeDashOffset="1.5"/>
                        <Rectangle
                            x:Name="FocusVisualBlack"
                            IsHitTestVisible="False"
                            Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}"
                            StrokeEndLineCap="Square"
                            StrokeDashArray="1,1"
                            Opacity="0"
                            StrokeDashOffset="0.5"/>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Text" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ApplicationPointerOverForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Text" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ApplicationPressedForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Text" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonDisabledForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetName="FocusVisualWhite" Storyboard.TargetProperty="Opacity"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetName="FocusVisualBlack" Storyboard.TargetProperty="Opacity"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--
        TextRadioButtonStyle is used to style a RadioButton using subheader-styled text with no other adornment.
        This style is used in the SearchResultsPage to allow selection among filters.
    -->
    <Style x:Key="TextRadioButtonStyle" TargetType="RadioButton">
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="MinHeight" Value="0"/>
        <Setter Property="Margin" Value="0,0,30,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Grid Background="Transparent">
                        <TextBlock
                            x:Name="Text"
                            Text="{TemplateBinding Content}"
                            Margin="3,-7,3,10"
                            TextWrapping="NoWrap"
                            Style="{StaticResource SubheaderTextStyle}"/>
                        <Rectangle
                            x:Name="FocusVisualWhite"
                            IsHitTestVisible="False"
                            Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}"
                            StrokeEndLineCap="Square"
                            StrokeDashArray="1,1"
                            Opacity="0"
                            StrokeDashOffset="1.5"/>
                        <Rectangle
                            x:Name="FocusVisualBlack"
                            IsHitTestVisible="False"
                            Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}"
                            StrokeEndLineCap="Square"
                            StrokeDashArray="1,1"
                            Opacity="0"
                            StrokeDashOffset="0.5"/>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Text" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ApplicationPointerOverForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Text" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ApplicationPressedForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Text" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonDisabledForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetName="FocusVisualWhite" Storyboard.TargetProperty="Opacity"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetName="FocusVisualBlack" Storyboard.TargetProperty="Opacity"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked"/>
                                <VisualState x:Name="Unchecked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Text" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ApplicationSecondaryForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Indeterminate"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--
        AppBarButtonStyle is used to style a Button for use in an App Bar.  Content will be centered and should fit within
        the 40-pixel radius glyph provided.  16-point Segoe UI Symbol is used for content text to simplify the use of glyphs
        from that font.  AutomationProperties.Name is used for the text below the glyph.
    -->
    <Style x:Key="AppBarButtonStyle" TargetType="Button">
        <Setter Property="Foreground" Value="{StaticResource AppBarItemForegroundThemeBrush}"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="FontFamily" Value="Segoe UI Symbol"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="AutomationProperties.ItemType" Value="App Bar Button"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="RootGrid" Width="100" Background="Transparent">
                        <StackPanel VerticalAlignment="Top" Margin="0,12,0,11">
                            <Grid Width="40" Height="40" Margin="0,0,0,5" HorizontalAlignment="Center">
                                <TextBlock x:Name="BackgroundGlyph" Text="&#xE0A8;" FontFamily="Segoe UI Symbol" FontSize="53.333" Margin="-4,-19,0,0" Foreground="{StaticResource AppBarItemBackgroundThemeBrush}"/>
                                <TextBlock x:Name="OutlineGlyph" Text="&#xE0A7;" FontFamily="Segoe UI Symbol" FontSize="53.333" Margin="-4,-19,0,0"/>
                                <ContentPresenter x:Name="Content" HorizontalAlignment="Center" Margin="-1,-1,0,0" VerticalAlignment="Center"/>
                            </Grid>
                            <TextBlock
                                x:Name="TextLabel"
                                Text="{TemplateBinding AutomationProperties.Name}"
                                Foreground="{StaticResource AppBarItemForegroundThemeBrush}"
                                Margin="0,0,2,0"
                                FontSize="12"
                                TextAlignment="Center"
                                Width="88"
                                MaxHeight="32"
                                TextTrimming="WordEllipsis"
                                Style="{StaticResource BasicTextStyle}"/>
                        </StackPanel>
                        <Rectangle
                                x:Name="FocusVisualWhite"
                                IsHitTestVisible="False"
                                Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}"
                                StrokeEndLineCap="Square"
                                StrokeDashArray="1,1"
                                Opacity="0"
                                StrokeDashOffset="1.5"/>
                        <Rectangle
                                x:Name="FocusVisualBlack"
                                IsHitTestVisible="False"
                                Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}"
                                StrokeEndLineCap="Square"
                                StrokeDashArray="1,1"
                                Opacity="0"
                                StrokeDashOffset="0.5"/>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ApplicationViewStates">
                                <VisualState x:Name="FullScreenLandscape"/>
                                <VisualState x:Name="Filled"/>
                                <VisualState x:Name="FullScreenPortrait">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Width">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="60"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Snapped">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Width">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="60"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGlyph" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemPointerOverBackgroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemPointerOverForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OutlineGlyph" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGlyph" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemPressedForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OutlineGlyph" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemDisabledForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemDisabledForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemDisabledForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation
                                                Storyboard.TargetName="FocusVisualWhite"
                                                Storyboard.TargetProperty="Opacity"
                                                To="1"
                                                Duration="0"/>
                                        <DoubleAnimation
                                                Storyboard.TargetName="FocusVisualBlack"
                                                Storyboard.TargetProperty="Opacity"
                                                To="1"
                                                Duration="0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                                <VisualState x:Name="PointerFocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Standard App Bar buttons -->
  
    <Style x:Key="SkipBackAppBarButtonStyle" TargetType="Button" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="SkipBackAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Skip Back"/>
        <Setter Property="Content" Value="&#xE100;"/>
    </Style>
    <Style x:Key="SkipAheadAppBarButtonStyle" TargetType="Button" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="SkipAheadAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Skip Ahead"/>
        <Setter Property="Content" Value="&#xE101;"/>
    </Style>
    <Style x:Key="PlayAppBarButtonStyle" TargetType="Button" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="PlayAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Play"/>
        <Setter Property="Content" Value="&#xE102;"/>
    </Style>
    <Style x:Key="PauseAppBarButtonStyle" TargetType="Button" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="PauseAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Pause"/>
        <Setter Property="Content" Value="&#xE103;"/>
    </Style>
    <Style x:Key="EditAppBarButtonStyle" TargetType="Button" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="EditAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Edit"/>
        <Setter Property="Content" Value="&#xE104;"/>
    </Style>
    <Style x:Key="SaveAppBarButtonStyle" TargetType="Button" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="SaveAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Save"/>
        <Setter Property="Content" Value="&#xE105;"/>
    </Style>
    <Style x:Key="DeleteAppBarButtonStyle" TargetType="Button" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="DeleteAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Delete"/>
        <Setter Property="Content" Value="&#xE106;"/>
    </Style>
    <Style x:Key="DiscardAppBarButtonStyle" TargetType="Button" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="DiscardAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Discard"/>
        <Setter Property="Content" Value="&#xE107;"/>
    </Style>
    <Style x:Key="RemoveAppBarButtonStyle" TargetType="Button" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="RemoveAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Remove"/>
        <Setter Property="Content" Value="&#xE108;"/>
    </Style>
    <Style x:Key="AddAppBarButtonStyle" TargetType="Button" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="AddAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Add"/>
        <Setter Property="Content" Value="&#xE109;"/>
    </Style>
    <Style x:Key="NoAppBarButtonStyle" TargetType="Button" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="NoAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="No"/>
        <Setter Property="Content" Value="&#xE10A;"/>
    </Style>
    <Style x:Key="YesAppBarButtonStyle" TargetType="Button" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="YesAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Yes"/>
        <Setter Property="Content" Value="&#xE10B;"/>
    </Style>
    <Style x:Key="MoreAppBarButtonStyle" TargetType="Button" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="MoreAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="More"/>
        <Setter Property="Content" Value="&#xE10C;"/>
    </Style>
    <Style x:Key="RedoAppBarButtonStyle" TargetType="Button" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="RedoAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Redo"/>
        <Setter Property="Content" Value="&#xE10D;"/>
    </Style>
    <Style x:Key="UndoAppBarButtonStyle" TargetType="Button" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="UndoAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Undo"/>
        <Setter Property="Content" Value="&#xE10E;"/>
    </Style>
    <Style x:Key="HomeAppBarButtonStyle" TargetType="Button" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="HomeAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Home"/>
        <Setter Property="Content" Value="&#xE10F;"/>
    </Style>
    <Style x:Key="OutAppBarButtonStyle" TargetType="Button" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="OutAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Out"/>
        <Setter Property="Content" Value="&#xE110;"/>
    </Style>
    <Style x:Key="NextAppBarButtonStyle" TargetType="Button" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="NextAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Next"/>
        <Setter Property="Content" Value="&#xE111;"/>
    </Style>
    <Style x:Key="PreviousAppBarButtonStyle" TargetType="Button" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="PreviousAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Previous"/>
        <Setter Property="Content" Value="&#xE112;"/>
    </Style>
    <Style x:Key="FavoriteAppBarButtonStyle" TargetType="Button" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="FavoriteAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Favorite"/>
        <Setter Property="Content" Value="&#xE113;"/>
    </Style>
    <Style x:Key="PhotoAppBarButtonStyle" TargetType="Button" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="PhotoAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Photo"/>
        <Setter Property="Content" Value="&#xE114;"/>
    </Style>
    <Style x:Key="SettingsAppBarButtonStyle" TargetType="Button" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="SettingsAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Settings"/>
        <Setter Property="Content" Value="&#xE115;"/>
    </Style>
    <Style x:Key="VideoAppBarButtonStyle" TargetType="Button" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="VideoAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Video"/>
        <Setter Property="Content" Value="&#xE116;"/>
    </Style>
    <Style x:Key="RefreshAppBarButtonStyle" TargetType="Button" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="RefreshAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Refresh"/>
        <Setter Property="Content" Value="&#xE117;"/>
    </Style>
    <Style x:Key="DownloadAppBarButtonStyle" TargetType="Button" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="DownloadAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Download"/>
        <Setter Property="Content" Value="&#xE118;"/>
    </Style>
    <Style x:Key="MailAppBarButtonStyle" TargetType="Button" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="MailAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Mail"/>
        <Setter Property="Content" Value="&#xE119;"/>
    </Style>
    <Style x:Key="SearchAppBarButtonStyle" TargetType="Button" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="SearchAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Search"/>
        <Setter Property="Content" Value="&#xE11A;"/>
    </Style>
    <Style x:Key="HelpAppBarButtonStyle" TargetType="Button" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="HelpAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Help"/>
        <Setter Property="Content" Value="&#xE11B;"/>
    </Style>
    <Style x:Key="UploadAppBarButtonStyle" TargetType="Button" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="UploadAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Upload"/>
        <Setter Property="Content" Value="&#xE11C;"/>
    </Style>
    <Style x:Key="PinAppBarButtonStyle" TargetType="Button" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="PinAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Pin"/>
        <Setter Property="Content" Value="&#xE141;"/>
    </Style>
    <Style x:Key="UnpinAppBarButtonStyle" TargetType="Button" BasedOn="{StaticResource AppBarButtonStyle}">
        <Setter Property="AutomationProperties.AutomationId" Value="UnpinAppBarButton"/>
        <Setter Property="AutomationProperties.Name" Value="Unpin"/>
        <Setter Property="Content" Value="&#xE196;"/>
    </Style>

    <!-- Title area styles -->

    <Style x:Key="PageHeaderTextStyle" TargetType="TextBlock" BasedOn="{StaticResource HeaderTextStyle}">
        <Setter Property="TextWrapping" Value="NoWrap"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="Margin" Value="0,0,30,40"/>
    </Style>

    <Style x:Key="PageSubheaderTextStyle" TargetType="TextBlock" BasedOn="{StaticResource SubheaderTextStyle}">
        <Setter Property="TextWrapping" Value="NoWrap"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="Margin" Value="0,0,0,40"/>
    </Style>

    <Style x:Key="SnappedPageHeaderTextStyle" TargetType="TextBlock" BasedOn="{StaticResource PageSubheaderTextStyle}">
        <Setter Property="Margin" Value="0,0,18,40"/>
    </Style>

    <!--
        BackButtonStyle is used to style a Button for use in the title area of a page.  Margins appropriate for
        the conventional page layout are included as part of the style.
    -->
    <Style x:Key="BackButtonStyle" TargetType="Button">
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="Width" Value="48"/>
        <Setter Property="Height" Value="48"/>
        <Setter Property="Margin" Value="36,0,36,36"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="FontFamily" Value="Segoe UI Symbol"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontSize" Value="56"/>
        <Setter Property="AutomationProperties.AutomationId" Value="BackButton"/>
        <Setter Property="AutomationProperties.Name" Value="Back"/>
        <Setter Property="AutomationProperties.ItemType" Value="Navigation Button"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="RootGrid">
                        <Grid Margin="-1,-16,0,0">
                            <TextBlock x:Name="BackgroundGlyph" Text="&#xE0A8;" Foreground="{StaticResource BackButtonBackgroundThemeBrush}"/>
                            <TextBlock x:Name="NormalGlyph" Text="{StaticResource BackButtonGlyph}" Foreground="Black"/>
                            <TextBlock x:Name="ArrowGlyph" Text="&#xE0A6;" Foreground="{StaticResource BackButtonPressedForegroundThemeBrush}" Opacity="0"/>
                        </Grid>
                        <Rectangle
                            x:Name="FocusVisualWhite"
                            IsHitTestVisible="False"
                            Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}"
                            StrokeEndLineCap="Square"
                            StrokeDashArray="1,1"
                            Opacity="0"
                            StrokeDashOffset="1.5"/>
                        <Rectangle
                            x:Name="FocusVisualBlack"
                            IsHitTestVisible="False"
                            Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}"
                            StrokeEndLineCap="Square"
                            StrokeDashArray="1,1"
                            Opacity="0"
                            StrokeDashOffset="0.5"/>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGlyph" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource BackButtonPointerOverBackgroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="NormalGlyph" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource BackButtonPointerOverForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGlyph" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource BackButtonForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation
                                            Storyboard.TargetName="ArrowGlyph"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0"/>
                                        <DoubleAnimation
                                            Storyboard.TargetName="NormalGlyph"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0"
                                            Duration="0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="FocusVisualWhite"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0"/>
                                        <DoubleAnimation
                                            Storyboard.TargetName="FocusVisualBlack"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                                <VisualState x:Name="PointerFocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--
        PortraitBackButtonStyle is used to style a Button for use in the title area of a portrait page.  Margins appropriate
        for the conventional page layout are included as part of the style.
    -->
    <Style x:Key="PortraitBackButtonStyle" TargetType="Button" BasedOn="{StaticResource BackButtonStyle}">
        <Setter Property="Margin" Value="26,0,26,36"/>
    </Style>

    <!--
        SnappedBackButtonStyle is used to style a Button for use in the title area of a snapped page.  Margins appropriate
        for the conventional page layout are included as part of the style.
        
        The obvious duplication here is necessary as the glyphs used in snapped are not merely smaller versions of the same
        glyph but are actually distinct.
    -->
    <Style x:Key="SnappedBackButtonStyle" TargetType="Button">
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="Margin" Value="20,0,0,0"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="FontFamily" Value="Segoe UI Symbol"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontSize" Value="26.66667"/>
        <Setter Property="AutomationProperties.AutomationId" Value="BackButton"/>
        <Setter Property="AutomationProperties.Name" Value="Back"/>
        <Setter Property="AutomationProperties.ItemType" Value="Navigation Button"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="RootGrid" Width="36" Height="36" Margin="-3,0,7,33">
                        <Grid Margin="-1,-1,0,0">
                            <TextBlock x:Name="BackgroundGlyph" Text="&#xE0D4;" Foreground="{StaticResource BackButtonBackgroundThemeBrush}"/>
                            <TextBlock x:Name="NormalGlyph" Text="{StaticResource BackButtonSnappedGlyph}" Foreground="{StaticResource BackButtonForegroundThemeBrush}"/>
                            <TextBlock x:Name="ArrowGlyph" Text="&#xE0C4;" Foreground="{StaticResource BackButtonPressedForegroundThemeBrush}" Opacity="0"/>
                        </Grid>
                        <Rectangle
                            x:Name="FocusVisualWhite"
                            IsHitTestVisible="False"
                            Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}"
                            StrokeEndLineCap="Square"
                            StrokeDashArray="1,1"
                            Opacity="0"
                            StrokeDashOffset="1.5"/>
                        <Rectangle
                            x:Name="FocusVisualBlack"
                            IsHitTestVisible="False"
                            Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}"
                            StrokeEndLineCap="Square"
                            StrokeDashArray="1,1"
                            Opacity="0"
                            StrokeDashOffset="0.5"/>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGlyph" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource BackButtonPointerOverBackgroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="NormalGlyph" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource BackButtonPointerOverForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGlyph" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource BackButtonForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation
                                            Storyboard.TargetName="ArrowGlyph"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0"/>
                                        <DoubleAnimation
                                            Storyboard.TargetName="NormalGlyph"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0"
                                            Duration="0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="FocusVisualWhite"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0"/>
                                        <DoubleAnimation
                                            Storyboard.TargetName="FocusVisualBlack"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                                <VisualState x:Name="PointerFocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Item templates -->

    <!-- Grid-appropriate 250 pixel square item template as seen in the GroupedItemsPage and ItemsPage -->
    <DataTemplate x:Key="Standard250x250ItemTemplate">
        <Grid HorizontalAlignment="Left" Width="250" Height="250">
            <Border Background="{StaticResource ListViewItemPlaceholderBackgroundThemeBrush}">
                <Image Source="{Binding Image}" Stretch="UniformToFill"/>
            </Border>
            <StackPanel VerticalAlignment="Bottom" Background="{StaticResource ListViewItemOverlayBackgroundThemeBrush}">
                <TextBlock Text="{Binding UserId}" Foreground="{StaticResource ListViewItemOverlayForegroundThemeBrush}" Style="{StaticResource TitleTextStyle}" Height="60" Margin="15,0,15,0"/>
                <TextBlock Text="{Binding FName}" Foreground="{StaticResource ListViewItemOverlaySecondaryForegroundThemeBrush}" Style="{StaticResource CaptionTextStyle}" TextWrapping="NoWrap" Margin="15,0,15,10"/>
            </StackPanel>
        </Grid>
    </DataTemplate>

    <!-- Grid-appropriate 500 by 130 pixel item template as seen in the GroupDetailPage -->
    <DataTemplate x:Key="Standard500x130ItemTemplate">
        <Grid Height="110" Width="480" Margin="10">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Border Background="{StaticResource ListViewItemPlaceholderBackgroundThemeBrush}" Width="110" Height="110">
                <Image Source="{Binding Image}" Stretch="UniformToFill"/>
            </Border>
            <StackPanel Grid.Column="1" VerticalAlignment="Top" Margin="10,0,0,0">
                <TextBlock Text="{Binding Title}" Style="{StaticResource TitleTextStyle}" TextWrapping="NoWrap"/>
                <TextBlock Text="{Binding Subtitle}" Style="{StaticResource CaptionTextStyle}" TextWrapping="NoWrap"/>
                <TextBlock Text="{Binding Description}" Style="{StaticResource BodyTextStyle}" MaxHeight="60"/>
            </StackPanel>
        </Grid>
    </DataTemplate>

    <!-- List-appropriate 130 pixel high item template as seen in the SplitPage -->
    <DataTemplate x:Key="Standard130ItemTemplate">
        <Grid Height="110" Margin="6">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Border Background="{StaticResource ListViewItemPlaceholderBackgroundThemeBrush}" Width="110" Height="110">
                <Image Source="{Binding Image}" Stretch="UniformToFill"/>
            </Border>
            <StackPanel Grid.Column="1" VerticalAlignment="Top" Margin="10,0,0,0">
                <TextBlock Text="{Binding Title}" Style="{StaticResource TitleTextStyle}" TextWrapping="NoWrap"/>
                <TextBlock Text="{Binding Subtitle}" Style="{StaticResource CaptionTextStyle}" TextWrapping="NoWrap"/>
                <TextBlock Text="{Binding Description}" Style="{StaticResource BodyTextStyle}" MaxHeight="60"/>
            </StackPanel>
        </Grid>
    </DataTemplate>

    <!--
        List-appropriate 80 pixel high item template as seen in the SplitPage when Filled, and
        the following pages when snapped: GroupedItemsPage, GroupDetailPage, and ItemsPage
    -->
    <DataTemplate x:Key="Standard80ItemTemplate">
        <Grid Margin="6">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Border Background="{StaticResource ListViewItemPlaceholderBackgroundThemeBrush}" Width="60" Height="60">
                <Image Source="{Binding Image}" Stretch="UniformToFill"/>
            </Border>
            <StackPanel Grid.Column="1" Margin="10,0,0,0">
                <TextBlock Text="{Binding Title}" Style="{StaticResource ItemTextStyle}" MaxHeight="40"/>
                <TextBlock Text="{Binding Subtitle}" Style="{StaticResource CaptionTextStyle}" TextWrapping="NoWrap"/>
            </StackPanel>
        </Grid>
    </DataTemplate>

    <!-- Grid-appropriate 300 by 70 pixel item template as seen in the SearchResultsPage -->
    <DataTemplate x:Key="StandardSmallIcon300x70ItemTemplate">
        <Grid Width="294" Margin="6">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Border Background="{StaticResource ListViewItemPlaceholderBackgroundThemeBrush}" Margin="0,0,0,10" Width="40" Height="40">
                <Image Source="{Binding Image}" Stretch="UniformToFill"/>
            </Border>
            <StackPanel Grid.Column="1" Margin="10,-10,0,0">
                <TextBlock Text="{Binding Title}" Style="{StaticResource BodyTextStyle}" TextWrapping="NoWrap"/>
                <TextBlock Text="{Binding Subtitle}" Style="{StaticResource BodyTextStyle}" Foreground="{StaticResource ApplicationSecondaryForegroundThemeBrush}" TextWrapping="NoWrap"/>
                <TextBlock Text="{Binding Description}" Style="{StaticResource BodyTextStyle}" Foreground="{StaticResource ApplicationSecondaryForegroundThemeBrush}" TextWrapping="NoWrap"/>
            </StackPanel>
        </Grid>
    </DataTemplate>

    <!-- List-appropriate 70 pixel high item template as seen in the SearchResultsPage when Snapped -->
    <DataTemplate x:Key="StandardSmallIcon70ItemTemplate">
        <Grid Margin="6">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Border Background="{StaticResource ListViewItemPlaceholderBackgroundThemeBrush}" Margin="0,0,0,10" Width="40" Height="40">
                <Image Source="{Binding Image}" Stretch="UniformToFill"/>
            </Border>
            <StackPanel Grid.Column="1" Margin="10,-10,0,0">
                <TextBlock Text="{Binding Title}" Style="{StaticResource BodyTextStyle}" TextWrapping="NoWrap"/>
                <TextBlock Text="{Binding Subtitle}" Style="{StaticResource BodyTextStyle}" Foreground="{StaticResource ApplicationSecondaryForegroundThemeBrush}" TextWrapping="NoWrap"/>
                <TextBlock Text="{Binding Description}" Style="{StaticResource BodyTextStyle}" Foreground="{StaticResource ApplicationSecondaryForegroundThemeBrush}" TextWrapping="NoWrap"/>
            </StackPanel>
        </Grid>
    </DataTemplate>

  <!--
      190x130 pixel item template for displaying file previews as seen in the FileOpenPickerPage
      Includes an elaborate tooltip to display title and description text
  -->
  <DataTemplate x:Key="StandardFileWithTooltip190x130ItemTemplate">
        <Grid>
            <Grid Background="{StaticResource ListViewItemPlaceholderBackgroundThemeBrush}">
                <Image
                    Source="{Binding Image}"
                    Width="190"
                    Height="130"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Stretch="Uniform"/>
            </Grid>
            <ToolTipService.Placement>Mouse</ToolTipService.Placement>
            <ToolTipService.ToolTip>
                <ToolTip>
                    <ToolTip.Style>
                        <Style TargetType="ToolTip">
                            <Setter Property="BorderBrush" Value="{StaticResource ToolTipBackgroundThemeBrush}" />
                            <Setter Property="Padding" Value="0" />
                        </Style>
                    </ToolTip.Style>

                    <Grid Background="{StaticResource ApplicationPageBackgroundThemeBrush}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <Grid Background="{StaticResource ListViewItemPlaceholderBackgroundThemeBrush}" Margin="20">
                            <Image
                                Source="{Binding Image}"
                                Width="160"
                                Height="160"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Stretch="Uniform"/>
                        </Grid>
                        <StackPanel Width="200" Grid.Column="1" Margin="0,20,20,20">
                            <TextBlock Text="{Binding Title}" TextWrapping="NoWrap" Style="{StaticResource BodyTextStyle}"/>
                            <TextBlock Text="{Binding Description}" MaxHeight="140" Foreground="{StaticResource ApplicationSecondaryForegroundThemeBrush}" Style="{StaticResource BodyTextStyle}"/>
                        </StackPanel>
                    </Grid>   
                </ToolTip>                
            </ToolTipService.ToolTip>
        </Grid>
    </DataTemplate>

    <!-- ScrollViewer styles -->

    <Style x:Key="HorizontalScrollViewerStyle" TargetType="ScrollViewer">
        <Setter Property="HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Enabled" />
        <Setter Property="ScrollViewer.VerticalScrollMode" Value="Disabled" />
        <Setter Property="ScrollViewer.ZoomMode" Value="Disabled" />
    </Style>

    <Style x:Key="VerticalScrollViewerStyle" TargetType="ScrollViewer">
        <Setter Property="HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled" />
        <Setter Property="ScrollViewer.VerticalScrollMode" Value="Enabled" />
        <Setter Property="ScrollViewer.ZoomMode" Value="Disabled" />
    </Style>

    <!-- Page layout roots typically use entrance animations and a theme-appropriate background color -->

    <Style x:Key="LayoutRootStyle" TargetType="Panel">
        <Setter Property="Background" Value="{StaticResource ApplicationPageBackgroundThemeBrush}"/>
        <Setter Property="ChildrenTransitions">
            <Setter.Value>
                <TransitionCollection>
                    <EntranceThemeTransition/>
                </TransitionCollection>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--Registration Form-->

    <DataTemplate x:Key="RegistrationTemplate" >
        <Grid >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="400" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0">
                <StackPanel>
                    <TextBlock FontSize="40" Margin="10,0,0,0" Text="Register" Foreground="Black"/>
                    <TextBlock FontSize="15" Margin="10,20,10,20" TextWrapping="Wrap" Foreground="Black">
Welcome to the Clinic System. Please insert your Microsoft Azure connection
information to connect to your cloud database. 
                    </TextBlock>

                    <TextBlock FontSize="15" Margin="10,10,10,0" Text="Application Url" Foreground="Black"/>
                    <TextBox Margin="10,5,10,10" Text="{Binding Ci.ApplicationURL, Mode=TwoWay}" BorderBrush="Black"/>
                    <TextBlock FontSize="15" Margin="10,10,10,0" Text="Application Key" Foreground="Black"/>
                    <PasswordBox Margin="10,5,10,10"  Password="{Binding Ci.ApplicationKey, Mode=TwoWay}" BorderBrush="Black"/>
                    <TextBlock FontSize="15" Margin="10,10,10,0" Text="Clinic Name" Foreground="Black"/>
                    <TextBox Margin="10,5,10,10" Text="{Binding Ci.Name, Mode=TwoWay}" BorderBrush="Black"/>
                    <!--<Button HorizontalAlignment="Right" Content="Register" Margin="10" Command="{Binding RegisterCommand}"/>-->
                    <Button HorizontalAlignment="Right" Content="Register" Margin="10" Command="{Binding RegisterCommand}" Foreground="Black" BorderBrush="Black"/>
                </StackPanel>
            </Grid>
        </Grid>
    </DataTemplate>

    <clinic:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" VisibleValue="True" />
    <common:MyConverter x:Key="MyConverter" />
    <common:MyConverter2 x:Key="MyConverter2" />
    <common:DateConverter x:Key="DateConverter" />
    <common:GenderConverter x:Key="GenderConverter" />
    <common:HistoryConverter x:Key="HistoryConverter"/>
    <common:TimeConverter x:Key="TimeConverter"/>
    <common:OutLookEventConverter x:Key="OutLookEventConverter"/>
    <common:OutLookEventConverterWeekly x:Key="OutLookEventConverterWeekly"/>
    <common:StaffItem1Converter x:Key="StaffItem1Converter"/>
    <common:TotalConverter x:Key="TotalConverter"/>
    <common:ShiftConverter x:Key="ShiftConverter"/>
    <common:WorkHoursConverter x:Key="WorkHoursConverter"/>
    <common:BreakConverter x:Key="BreakConverter"/>
    <common:OnCallConverter x:Key="OnCallConverter" />
    <common:ColorConverter x:Key="ColorConverter"/>
    <common:TimeOffConverter x:Key="TimeOffConverter"/>
    <common:WidthConverter x:Key="WidthConverter"/>
    <common:EventConverter x:Key="EventConverter"/>
    <common:EventConverter2 x:Key="EventConverter2"/>
    <common:Underscore x:Key="Underscore"/>
    <common:Underscore2 x:Key="Underscore2"/>
    <common:Underscore3 x:Key="Underscore3"/>
    <common:Underscore4 x:Key="Underscore4"/>
    <common:Underscore5 x:Key="Underscore5"/>
    <common:InvitationButton x:Key="InvitationButton"/>
    <common:InvitationWidth x:Key="InvitationWidth"/>
    <common:AppWidth x:Key="AppWidth"/>
    <common:DateTimeToDateTimeOffsetConverter  x:Key="DateTimeToDateTimeOffsetConverter"/>
    <common:PatientNameConverter x:Key="PatientNameConverter"/>
    <common:PopupInvVisibility x:Key="PopupInvVisibility"/>
    <common:PopupAppVisibility x:Key="PopupAppVisibility"/>
    <common:HistoryVisibility x:Key="HistoryVisibility"/>
    <common:AppConverter x:Key="AppConverter"/>
    <common:AppointmentConverter x:Key="AppointmentConverter"/>
    <common:PatientEncounterConverter x:Key="PatientEncounterConverter"/>
    <common:AppIdToDoc x:Key="AppIdToDoc"/>
    <common:AppIdToPatient x:Key="AppIdToPatient"/>
    <common:AppIdToDate x:Key="AppIdToDate"/>
    <common:AppIdToFromTime x:Key="AppIdToFromTime"/>
    <common:AppIdToToTime x:Key="AppIdToToTime" />
    <common:AppIdToComplaint x:Key="AppIdToComplaint"/>
    

    <DataTemplate x:Key="AddPatientTemplate" >

        <Grid x:Name="Input" Grid.Row="1" Margin="70,0,0,0" >
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>

            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <!--<ColumnDefinition Width="Auto"/>-->
            </Grid.ColumnDefinitions>

            <TextBlock Padding="0,0,0,30"  Grid.Row="0" Style="{StaticResource SubheaderTextBlockStyle}" TextWrapping="Wrap" HorizontalAlignment="Left">
                Add New Patient
            </TextBlock>
            <StackPanel Grid.Column="0" Grid.Row="1">
                <!--<TextBlock Style="{StaticResource BasicTextStyle}" FontWeight="SemiBold" Margin="0,10,0,10">Start Time:</TextBlock>-->
                <!--<DatePicker x:Name="StartTimeDatePicker" Margin="0,10,0,10"></DatePicker>
                <TimePicker x:Name="StartTimeTimePicker" Margin="0,10,0,10"></TimePicker>-->
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="100"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Padding="0,0,10,0" Grid.Column="0" Style="{StaticResource BasicTextStyle}" FontWeight="SemiBold" Margin="0,10,0,10">First Name</TextBlock>
                    <TextBox Grid.Column="1" x:Name="FirstnameTextBox" Width="320" HorizontalAlignment="Left" Margin="0,4,0,6" Text="{Binding Pa.FName, Mode=TwoWay}"></TextBox>
                </Grid>

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="100"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Padding="0,0,10,0" Grid.Column="0" Style="{StaticResource BasicTextStyle}" FontWeight="SemiBold" Margin="0,10,0,10">Last Name</TextBlock>
                    <TextBox Grid.Column="1" x:Name="LastNameTextBox" Width="320" HorizontalAlignment="Left" Margin="0,4,0,6" Text="{Binding Pa.LName, Mode=TwoWay}"></TextBox>
                </Grid>

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="100"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Padding="0,0,10,0" Grid.Column="0" Style="{StaticResource BasicTextStyle}" FontWeight="SemiBold" Margin="0,10,0,10">DOB</TextBlock>
                    <!--<TextBox Grid.Column="1" x:Name="DOBTextBox" Width="320" HorizontalAlignment="Left" Margin="0,4,0,6" Text="{Binding Pa.Dob, Mode=TwoWay}"></TextBox>-->
                    <!--<dt:DatePicker Grid.Column="1" x:Name="datePicker"   Width="320" HorizontalAlignment="Left" Margin="0,4,0,6"  SelectedDate="{Binding Pa.Dob, Mode=TwoWay}" />-->
                    <DatePicker Grid.Column="1" x:Name="datePicker"   Width="320" HorizontalAlignment="Left" Margin="0,4,0,6"  Date ="{Binding Pa.Dob, Converter={StaticResource DateTimeToDateTimeOffsetConverter }, Mode=TwoWay}"  />

                </Grid>

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="100"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Padding="0,0,10,0" Grid.Column="0" Style="{StaticResource BasicTextStyle}" FontWeight="SemiBold" Margin="0,10,0,10">Gender</TextBlock>
                    <ComboBox Grid.Column="1" x:Name="GenderTextBox" Width="320" HorizontalAlignment="Left" Margin="0,4,0,6" SelectedIndex="{Binding Pa.Gender, Mode=TwoWay}">
                        <ComboBoxItem x:Name="Male">Male</ComboBoxItem>
                        <ComboBoxItem x:Name="Female">Female</ComboBoxItem>
                    </ComboBox>
                    
                </Grid>

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="100"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Padding="0,0,10,0" Grid.Column="0" Style="{StaticResource BasicTextStyle}" FontWeight="SemiBold" Margin="0,10,0,10"> Status</TextBlock>
                    <ComboBox Grid.Column="1" x:Name="MaritalStatusTextBox" Width="320" HorizontalAlignment="Left" Margin="0,4,0,6" SelectedIndex="{Binding Pa.MaritalStatus, Mode=TwoWay}">
                        <ComboBoxItem x:Name="Single">Single</ComboBoxItem>
                        <ComboBoxItem x:Name="Married">Married</ComboBoxItem>

                    </ComboBox>

                </Grid>

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="100"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Padding="0,0,10,0" Grid.Column="0" Style="{StaticResource BasicTextStyle}" FontWeight="SemiBold" Margin="0,10,0,10">Social ID</TextBlock>
                    <TextBox Grid.Column="1" x:Name="SocialIDTextBox" Width="320" HorizontalAlignment="Left" Margin="0,4,0,6" Text="{Binding Pa.SocialID, Mode=TwoWay}"></TextBox>
                </Grid>

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="100"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Padding="0,0,10,0" Grid.Column="0" Style="{StaticResource BasicTextStyle}" FontWeight="SemiBold" Margin="0,10,0,10">Email</TextBlock>
                    <TextBox Grid.Column="1" x:Name="EmailTextBox" Width="320" HorizontalAlignment="Left" Margin="0,4,0,6"  Text="{Binding Pa.Email, Mode=TwoWay}"></TextBox>
                </Grid>

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="100"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Padding="0,0,10,0" Grid.Column="0" Style="{StaticResource BasicTextStyle}" FontWeight="SemiBold" Margin="0,10,0,10">Phone</TextBlock>
                    <TextBox Grid.Column="1" x:Name="PhoneTextBox" Width="320" HorizontalAlignment="Left" Margin="0,4,0,6"  Text="{Binding Pa.Phone, Mode=TwoWay}"></TextBox>
                </Grid>

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="100"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="30"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Padding="0,0,10,0" Grid.Column="0" Style="{StaticResource BasicTextStyle}" FontWeight="SemiBold" Margin="0,10,0,10">Image</TextBlock>
                    <!--<TextBox Grid.Column="1" x:Name="ImageTextBox" Width="320" HorizontalAlignment="Left" Margin="0,4,0,6"  Text="{Binding Pa.PatientImage, Mode=TwoWay}" ></TextBox>-->
                    <Border  BorderBrush="Black" BorderThickness="2" Grid.Column="1" x:Name="border" Width="320" Height="150" Margin="0,4,0,6">
                   
                    <Image Grid.Column="1" x:Name="patientImagePlaceholder" Width="320" Height="150" Margin="0,4,0,6" Source="{Binding MybitmapImage, Mode=TwoWay}"></Image>
                    </Border>
                    <Button Grid.Column="2" x:Name="photoPickerButton" HorizontalAlignment="Left" Command="{Binding PhotoPicker}" Width="51" Height="36" Margin="0,2,-21,4" >
                        <StackPanel >
                           
                            <Image  x:Name="filePickerImage" Source="Assets/New-Folder-icon.png" Height="16" Width="16" />
                            
                        </StackPanel>
                    </Button>
                </Grid>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="100"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Button Grid.Column="1" x:Name="AddPatientButton" Content="Add New Patient" Command="{Binding Add_Patient}" Margin="0,0,10,0" />
                    <Button Grid.Column="1" x:Name="CancelAddPatientButton" Content="Cancel" Command="{Binding Cancel_Add_Patient}" Margin="150,0,10,0" />
                </Grid>
            </StackPanel>

        </Grid>
    </DataTemplate>



    <DataTemplate x:Key="AddPatientInfoTemplate" >

        <Grid x:Name="Input2" Grid.Row="1" Margin="70,0,0,0" >
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <!--<RowDefinition Height="Auto"/>-->
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <TextBlock Padding="0,0,0,30"  Grid.Row="0" Style="{StaticResource SubheaderTextBlockStyle}" TextWrapping="Wrap" HorizontalAlignment="Left">
                Add Patient Info
            </TextBlock>




            <StackPanel Grid.Column="0" Grid.Row="1">

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="120"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Padding="0,0,10,0" Grid.Column="0" Style="{StaticResource BasicTextStyle}" FontWeight="SemiBold" Margin="4,18,316,2" Grid.ColumnSpan="2">Patient Name</TextBlock>
                    <ComboBox ItemsSource="{Binding Items}" Grid.Column="1" x:Name="patientCombobox" Width="320" Height="30" VerticalAlignment="Bottom" SelectedValue="{Binding ComboPatient , Mode=TwoWay}"/>
                </Grid>


                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="120"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Padding="0,0,10,0" Grid.Column="0" Style="{StaticResource BasicTextStyle}" FontWeight="SemiBold" Margin="4,18,316,2" Grid.ColumnSpan="2">Info Date</TextBlock>
                    <!--<dt:DatePicker Grid.Column="1" x:Name="datePicker"  Width="320" HorizontalAlignment="Left" Margin="0,12,0,-2" SelectedDate="{Binding Pi.InfoDate, Mode=TwoWay}" />-->
                    <DatePicker Grid.Column="1" x:Name="datePicker"   Width="320" HorizontalAlignment="Left" Margin="0,12,0,-2"  Date ="{Binding Pi.InfoDate, Converter={StaticResource DateTimeToDateTimeOffsetConverter }, Mode=TwoWay}"  />

                </Grid>

                <Grid >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="120"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Padding="0,0,10,0" Grid.Column="0" Style="{StaticResource BasicTextStyle}" FontWeight="SemiBold" Margin="0,18,0,2">Cholestrol</TextBlock>
                    <TextBox Grid.Column="1" x:Name="Cholestrol" Width="320" HorizontalAlignment="Left" Margin="0,12,0,-2" Text="{Binding Pi.Cholestrol, Mode=TwoWay}"></TextBox>
                </Grid>

                <!--<Grid >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="120"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Padding="0,0,10,0" Grid.Column="0" Style="{StaticResource BasicTextStyle}" FontWeight="SemiBold" Margin="0,18,0,2">Pulse</TextBlock>
                    <TextBox Grid.Column="1" x:Name="BloodPressure" Width="320" HorizontalAlignment="Left" Margin="0,12,0,-2" Text="{Binding Pi.BloodPressure, Mode=TwoWay}"></TextBox>

                </Grid>-->

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="120"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Padding="0,0,10,0" Grid.Column="0" Style="{StaticResource BasicTextStyle}" FontWeight="SemiBold" Margin="0,18,0,2">Pulse</TextBlock>
                    <TextBox Grid.Column="1" x:Name="Pulse" Width="320" HorizontalAlignment="Left" Margin="0,12,0,-2" Text="{Binding Pi.Pulse, Mode=TwoWay}"></TextBox>
                </Grid>

                <Grid >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="120"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Padding="0,0,10,0" Grid.Column="0" Style="{StaticResource BasicTextStyle}" FontWeight="SemiBold" Margin="0,18,0,2">Temperature</TextBlock>
                    <TextBox Grid.Column="1" x:Name="Temperature" Width="320" HorizontalAlignment="Left" Margin="0,12,0,-2" Text="{Binding Pi.Temperature, Mode=TwoWay}"></TextBox>


                </Grid>

                <Grid >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="120"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Padding="0,0,10,0" Grid.Column="0" Style="{StaticResource BasicTextStyle}" FontWeight="SemiBold" Margin="0,18,0,2">Weight</TextBlock>
                    <TextBox Grid.Column="1" x:Name="Weight" Width="320" HorizontalAlignment="Left" Margin="0,12,0,-2" Text="{Binding Pi.Weight, Mode=TwoWay}"></TextBox>


                </Grid>

                <Grid >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="120"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Padding="0,0,10,0" Grid.Column="0" Style="{StaticResource BasicTextStyle}" FontWeight="SemiBold" Margin="0,18,0,2">Height</TextBlock>
                    <TextBox Grid.Column="1" x:Name="Height" Width="320" HorizontalAlignment="Left" Margin="0,12,0,-2" Text="{Binding Pi.Height, Mode=TwoWay}" Height="30" VerticalAlignment="Top"/>
                </Grid>
                <Grid >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="120"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Padding="0,0,10,0" Grid.Column="0" Style="{StaticResource BasicTextStyle}" FontWeight="SemiBold" Margin="0,18,0,2">Info 1</TextBlock>
                    <TextBox Grid.Column="1" x:Name="Info1" Width="320" HorizontalAlignment="Left" Margin="0,12,0,-2" Text="{Binding Pi.Info1, Mode=TwoWay}" Height="30" VerticalAlignment="Top"/>
                </Grid>
                <Grid >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="120"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Padding="0,0,10,0" Grid.Column="0" Style="{StaticResource BasicTextStyle}" FontWeight="SemiBold" Margin="0,18,0,2">Info 2</TextBlock>
                    <TextBox Grid.Column="1" x:Name="Info2" Width="320" HorizontalAlignment="Left" Margin="0,12,0,-2" Text="{Binding Pi.Info2, Mode=TwoWay}" Height="30" VerticalAlignment="Top"/>
                </Grid>
                <Grid >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="120"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Padding="0,0,10,0" Grid.Column="0" Style="{StaticResource BasicTextStyle}" FontWeight="SemiBold" Margin="0,18,0,2">Info 3</TextBlock>
                    <TextBox Grid.Column="1" x:Name="Info3" Width="320" HorizontalAlignment="Left" Margin="0,12,0,-2" Text="{Binding Pi.Info3, Mode=TwoWay}" Height="30" VerticalAlignment="Top"/>
                </Grid>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="120"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Button Grid.Column="1" x:Name="AddPatientButton" Content="Add Patient Info" Command="{Binding Add_Patient_Info}" Margin="0,10,10,0" />
                    <Button Grid.Column="1" x:Name="CancelAddPatientButton" Content="Cancel" Command="{Binding Cancel_Add_Patient_Info}" Margin="150,10,10,0" />
                </Grid>

                
            </StackPanel>

            <StackPanel Grid.Column="1" Grid.Row="2">

            </StackPanel>



        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="AddPatientDocumentTemplate" >

        <Grid x:Name="Input" Grid.Row="1" Margin="70,0,0,0" >
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>

            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <!--<ColumnDefinition Width="Auto"/>-->
            </Grid.ColumnDefinitions>

            <TextBlock Padding="0,0,0,30"  Grid.Row="0" Style="{StaticResource SubheaderTextBlockStyle}" TextWrapping="Wrap" HorizontalAlignment="Left">
                Add New Patient Document
            </TextBlock>

            <Grid  Grid.Column="0"  Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="120"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <TextBlock  Grid.Column="0" Style="{StaticResource BasicTextStyle}" FontWeight="SemiBold" >Patient Name</TextBlock>
                <ComboBox ItemsSource="{Binding Items}" Grid.Column="1" x:Name="patientCombobox" Width="320" Height="32" Margin="4,-3,1,0" VerticalAlignment="Bottom" SelectedValue="{Binding ComboPatient , Mode=TwoWay}"/>
            </Grid>
            <!--<GridView ItemsSource="{Binding filesList}" Grid.Column="0" Grid.Row="2">-->
            <GridView  Grid.Column="0" Grid.Row="2">

                <!--<GridView.ItemTemplate>
                    <DataTemplate>-->
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="120"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="30"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock  Grid.Column="0" Style="{StaticResource BasicTextStyle}" FontWeight="SemiBold" Margin="0,10,0,10">Document</TextBlock>
                    <!--<TextBox Grid.Column="1" x:Name="ImageTextBox" Width="320" HorizontalAlignment="Left" Margin="0,4,0,6"  Text="{Binding Pa.PatientImage, Mode=TwoWay}" ></TextBox>-->
                    <!--<Border  BorderBrush="Black" BorderThickness="2" Grid.Column="1" x:Name="border" Width="320" Height="150" Margin="0,4,0,6">-->

                    <TextBox Grid.Column="1" x:Name="pickFileTextBox" Width="320"  Margin="0,4,0,9" Text="{Binding SelectedFile}"></TextBox>
                    <!--</Border>-->
                    <Button Grid.Column="2" x:Name="filePickerButton" HorizontalAlignment="Left" Command="{Binding FilePicker}" Width="36" Height="36" Margin="0,2,-15,4" >
                        <StackPanel >
                            <Image  x:Name="filePickerImage" Source="Assets/New-Folder-icon.png" Stretch="Uniform" Height="20" Width="20" Margin="-10"/>

                        </StackPanel>
                    </Button>
                </Grid>
                <!--</DataTemplate>
                </GridView.ItemTemplate>-->

            </GridView>

            <Grid Grid.Column="0" Grid.Row="3">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="125"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Button Grid.Column="1" x:Name="AddPatientDocumentButton" Content="Add New Patient Document" Command="{Binding Add_Patient_Document}" Margin="0,0,10,0" />
                <Button Grid.Column="1" x:Name="CancelAddPatientDocumentButton" Content="Cancel" Command="{Binding Cancel_Add_Patient_Document}" Margin="230,0,10,0" />
            </Grid>

        </Grid>




    </DataTemplate>


    <DataTemplate x:Key="AddAppointment" >

        <Grid x:Name="Input" Grid.Row="1" Margin="420,50,360,200"  Background="Gray">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>

            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <!--<ColumnDefinition Width="Auto"/>-->
            </Grid.ColumnDefinitions>

            <TextBlock Padding="0,0,0,30"  Grid.Row="0" Style="{StaticResource SubheaderTextBlockStyle}" TextWrapping="Wrap" HorizontalAlignment="Left">
                Add Appointment/Invitation
            </TextBlock>
            <StackPanel Grid.Column="0" Grid.Row="1">
                <!--<TextBlock Style="{StaticResource BasicTextStyle}" FontWeight="SemiBold" Margin="0,10,0,10">Start Time:</TextBlock>-->
                <!--<DatePicker x:Name="StartTimeDatePicker" Margin="0,10,0,10"></DatePicker>
                <TimePicker x:Name="StartTimeTimePicker" Margin="0,10,0,10"></TimePicker>-->
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="150"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Padding="10,0,10,0" Grid.Column="0" Style="{StaticResource BasicTextStyle}" FontWeight="SemiBold" Margin="0,10,0,10">Doctor Name</TextBlock>
                    <TextBox Grid.Column="1" x:Name="FirstnameTextBox" Width="320" HorizontalAlignment="Left" Margin="0,4,0,6" Text="{Binding Doc}" IsReadOnly="True"></TextBox>
                    <!--<ComboBox
                        Grid.Column="1" 
                        x:Name="DoctorsComboBox2"                       
                        SelectionChanged="DoctorsComboBox_SelectionChanged"
                        Margin="2,0,13,0" 
                        
                       ></ComboBox>-->
                </Grid>

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="150"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Padding="10,0,10,0" Grid.Column="0" Style="{StaticResource BasicTextStyle}" FontWeight="SemiBold" Margin="0,10,0,10">Patient Name</TextBlock>
                    <TextBox Grid.Column="1" x:Name="LastNameTextBox" Width="320" HorizontalAlignment="Left" Margin="0,4,0,6" Text="{Binding SelectedPatient, Converter={StaticResource PatientNameConverter}}" IsReadOnly="True"></TextBox>
                </Grid>

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="150"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Padding="10,0,10,0" Grid.Column="0" Style="{StaticResource BasicTextStyle}" FontWeight="SemiBold" Margin="0,10,0,10">Date</TextBlock>
                    <!--<TextBox Grid.Column="1" x:Name="DOBTextBox" Width="320" HorizontalAlignment="Left" Margin="0,4,0,6" Text="{Binding Pa.Dob, Mode=TwoWay}"></TextBox>-->
                    <DatePicker Grid.Column="1" x:Name="datePicker"   Width="320" HorizontalAlignment="Left" Margin="0,4,0,6"  Date="{Binding BindAppointment.Date,Converter={StaticResource DateTimeToDateTimeOffsetConverter} , Mode=TwoWay}" />
                    <!--<DatePicker Grid.Column="1" x:Name="datePicker"   Width="320" HorizontalAlignment="Left" Margin="0,4,0,6"  Date ="{Binding Pa.Dob, Mode=TwoWay}" />-->

                </Grid>

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="150"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Padding="10,0,10,0" Grid.Column="0" Style="{StaticResource BasicTextStyle}" FontWeight="SemiBold" Margin="0,10,0,10"> From</TextBlock>
                    <TimePicker Grid.Column="1" x:Name="timePicker"   Width="320" HorizontalAlignment="Left" Margin="0,4,0,6"  Time="{Binding BindAppointment.TimeFrom ,Mode=TwoWay}" />


                </Grid>


                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="150"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Padding="10,0,10,0" Grid.Column="0" Style="{StaticResource BasicTextStyle}" FontWeight="SemiBold" Margin="0,10,0,10">To</TextBlock>
                    <TimePicker Grid.Column="1" x:Name="timePicker2"   Width="320" HorizontalAlignment="Left" Margin="0,4,0,6"  Time="{Binding BindAppointment.TimeTo,Mode=TwoWay}" />


                </Grid>

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="150"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Padding="10,0,10,0" Grid.Column="0" Style="{StaticResource BasicTextStyle}" FontWeight="SemiBold" Margin="0,10,0,10">Complaint</TextBlock>
                    <TextBox Grid.Column="1" x:Name="SocialIDTextBox" Width="320" HorizontalAlignment="Left" Margin="0,4,0,6" Text="{Binding BindAppointment.Complaint, Mode=TwoWay}"></TextBox>
                </Grid>


                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="150"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Button Grid.Column="1" x:Name="AddPatientButton" Content="Add Appointment" Command="{Binding Add_Appointment}" Margin="0,0,10,0" />
                    <Button Grid.Column="1" x:Name="CancelAddPatientButton" Content="Cancel" Command="{Binding Cancel_Appointment}" Margin="150,0,10,0" />
                    <Button Grid.Column="2" x:Name="DeleteAddPatientButton" Content="Delete" Command="{Binding Delete_Appointment}" Visibility="{Binding DeleteAppointmentVisibility}"/>
                    <Button Grid.Column="3" x:Name="AddToCal" Content="Calendar..." Command="{Binding Cal_Appointment}"/> 
                     <!--Visibility="{Binding CalAppointmentVisibility}"-->

                </Grid>
            </StackPanel>

        </Grid>

    </DataTemplate>

    <DataTemplate x:Key="AddEncounter" >

        <Grid x:Name="Input" Grid.Row="1" Margin="420,50,400,0"  Background="Gray">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>

            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <!--<ColumnDefinition Width="Auto"/>-->
            </Grid.ColumnDefinitions>

            <TextBlock Padding="10,0,0,30"  Grid.Row="0" Style="{StaticResource SubheaderTextBlockStyle}" TextWrapping="Wrap" HorizontalAlignment="Left">
                Add Patient Encounter
            </TextBlock>
            <StackPanel Grid.Column="0" Grid.Row="1">
                <!--<TextBlock Style="{StaticResource BasicTextStyle}" FontWeight="SemiBold" Margin="0,10,0,10">Start Time:</TextBlock>-->
                <!--<DatePicker x:Name="StartTimeDatePicker" Margin="0,10,0,10"></DatePicker>
                <TimePicker x:Name="StartTimeTimePicker" Margin="0,10,0,10"></TimePicker>-->
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="150"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Padding="10,0,10,0" Grid.Column="0" Style="{StaticResource BasicTextStyle}" FontWeight="SemiBold" Margin="0,10,0,10">Doctor Name</TextBlock>
                    <TextBox Grid.Column="1" x:Name="FirstnameTextBox" Width="320" HorizontalAlignment="Left" Margin="0,4,0,6" Text="{Binding BindEncounter.AppointmentId,Converter={StaticResource AppIdToDoc}}" IsReadOnly="True"></TextBox>

                </Grid>

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="150"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Padding="10,0,10,0" Grid.Column="0" Style="{StaticResource BasicTextStyle}" FontWeight="SemiBold" Margin="0,10,0,10">Patient Name</TextBlock>
                    <TextBox Grid.Column="1" x:Name="LastNameTextBox" Width="320" HorizontalAlignment="Left" Margin="0,4,0,6" Text="{Binding BindEncounter.AppointmentId,Converter={StaticResource AppIdToPatient}}" IsReadOnly="True"></TextBox>
                </Grid>

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="150"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Padding="10,0,10,0" Grid.Column="0" Style="{StaticResource BasicTextStyle}" FontWeight="SemiBold" Margin="0,10,0,10">Date</TextBlock>
                    <!--<TextBox Grid.Column="1" x:Name="DOBTextBox" Width="320" HorizontalAlignment="Left" Margin="0,4,0,6" Text="{Binding Pa.Dob, Mode=TwoWay}"></TextBox>-->
                    <DatePicker Grid.Column="1" x:Name="datePicker"   Width="320" HorizontalAlignment="Left" Margin="0,4,0,6"  Date="{Binding  BindEncounter.AppointmentId,Converter={StaticResource AppIdToDate}}" />
                    <!--<DatePicker Grid.Column="1" x:Name="datePicker"   Width="320" HorizontalAlignment="Left" Margin="0,4,0,6"  Date ="{Binding Pa.Dob, Mode=TwoWay}" />-->

                </Grid>

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="150"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Padding="10,0,10,0" Grid.Column="0" Style="{StaticResource BasicTextStyle}" FontWeight="SemiBold" Margin="0,10,0,10"> From</TextBlock>
                    <TimePicker Grid.Column="1" x:Name="timePicker"   Width="320" HorizontalAlignment="Left" Margin="0,4,0,6"  Time="{Binding BindEncounter.AppointmentId, Converter={StaticResource AppIdToFromTime}}" />


                </Grid>


                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="150"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Padding="10,0,10,0" Grid.Column="0" Style="{StaticResource BasicTextStyle}" FontWeight="SemiBold" Margin="0,10,0,10">To</TextBlock>
                    <TimePicker Grid.Column="1" x:Name="timePicker2"   Width="320" HorizontalAlignment="Left" Margin="0,4,0,6"  Time="{Binding BindEncounter.AppointmentId, Converter={StaticResource AppIdToToTime}}" />


                </Grid>

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="150"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Padding="10,0,10,0" Grid.Column="0" Style="{StaticResource BasicTextStyle}" FontWeight="SemiBold" Margin="0,10,0,10">Complaint</TextBlock>
                    <TextBox Grid.Column="1" x:Name="Complaint" Width="320" HorizontalAlignment="Left" Margin="0,4,0,6" Text="{Binding BindEncounter.AppointmentId, Converter={StaticResource AppIdToComplaint}}"></TextBox>
                </Grid>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="150"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Padding="10,0,10,0" Grid.Column="0" Style="{StaticResource BasicTextStyle}" FontWeight="SemiBold" Margin="0,10,0,10">Diagnostics</TextBlock>
                    <TextBox Grid.Column="1" x:Name="Diagnostics" Width="320" HorizontalAlignment="Left" Margin="0,4,0,6" Text="{Binding BindEncounter.Diagnostics, Mode=TwoWay}"></TextBox>
                </Grid>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="150"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Padding="10,0,10,0" Grid.Column="0" Style="{StaticResource BasicTextStyle}" FontWeight="SemiBold" Margin="0,10,0,10">Notes</TextBlock>
                    <TextBox Grid.Column="1" x:Name="Notes" TextWrapping="Wrap" AcceptsReturn="True" ScrollViewer.VerticalScrollBarVisibility="Visible" Width="320" Height="100" HorizontalAlignment="Left" Margin="0,4,0,6" Text="{Binding BindEncounter.Notes, Mode=TwoWay}"></TextBox>
                </Grid>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="150"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Padding="10,0,10,0" Grid.Column="0" Style="{StaticResource BasicTextStyle}" FontWeight="SemiBold" Margin="0,10,0,10">Drugs</TextBlock>
                    <TextBox Grid.Column="1" x:Name="Drugs" Width="320"  HorizontalAlignment="Left" Margin="0,4,0,6" Text="{Binding BindEncounter.Drugs, Mode=TwoWay}"></TextBox>
                </Grid>


                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="150"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Button Grid.Column="1" x:Name="AddPatientButton" Content="Add Patient Encounter" Command="{Binding Add_Patient_Encounter}" Margin="0,0,10,0" />
                    <Button Grid.Column="1" x:Name="CancelAddPatientButton" Content="Cancel" Command="{Binding Cancel_Patient_Encounter}" Margin="190,0,10,0" />
                    <Button Grid.Column="2" x:Name="DeleteAddPatientButton" Content="Delete" Command="{Binding Delete_Patient_Encounter}" Visibility="{Binding DeleteAppointmentVisibility}"/>


                </Grid>
            </StackPanel>

        </Grid>
    </DataTemplate>

    <Style
        TargetType="charting:LineSeries">
        <Setter
            Property="IsTabStop"
            Value="False" />
        <Setter
            Property="PolylineStyle">
            <Setter.Value>
                <Style
                    TargetType="Polyline">
                    <Setter
                        Property="StrokeThickness"
                        Value="2" />
                    <Setter
                        Property="StrokeMiterLimit"
                        Value="1" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="charting:LineSeries">
                    <Canvas
                        x:Name="PlotArea">
                        <Polyline
                            Points="{TemplateBinding Points}"
                            Stroke="{TemplateBinding Background}"
                            Style="{TemplateBinding PolylineStyle}" />
                    </Canvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    
</ResourceDictionary>
